# your_app/management/commands/runbot.py
import os
import asyncio
import logging
from django.core.management.base import BaseCommand
from django.conf import settings
from aiogram import Bot, Dispatcher
from tg_bot.handlers import router


class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram-–±–æ—Ç–∞'

    def add_arguments(self, parser):
        parser.add_argument(
            '--token',
            type=str,
            help='Telegram Bot Token (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏)',
        )

    def handle(self, *args, **options):
        logging.basicConfig(level=logging.INFO)

        token = (options.get('token') or
                 os.getenv('TG_TOKEN') or
                 getattr(settings, 'TELEGRAM_BOT_TOKEN', None))

        if not token:
            self.stderr.write(
                self.style.ERROR(
                    '‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–∫–∞–∂–∏—Ç–µ –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:\n'
                    '   - –ß–µ—Ä–µ–∑ --token –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ\n'
                    '   - –ß–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TG_TOKEN\n'
                    '   - –ß–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫—É TELEGRAM_BOT_TOKEN –≤ settings.py'
                )
            )
            return

        self.stdout.write(
            self.style.SUCCESS(f'–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º: {token[:10]}...')
        )

        try:
            asyncio.run(self.main(token))
        except KeyboardInterrupt:
            self.stdout.write(self.style.WARNING('üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'))
        except Exception as e:
            self.stderr.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {e}'))

    async def main(self, token):
        bot = Bot(token=token)
        dp = Dispatcher()
        dp.include_router(router)

        self.stdout.write(self.style.SUCCESS('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!'))

        await dp.start_polling(bot)
